# 此文件用于绘制论文中各种实验的折线图
import json
import pickle
from sklearn import svm
import openpyxl
import seaborn as sns
import matplotlib.pyplot as plt
from sympy import false, true
import umap
import matplotlib.pyplot as plt
from sklearn.datasets import load_digits
# 已知的正负样本
negative=['SMESG000010270', 'SMESG000042630', 'SMESG000066574', 'SMESG000025574', 'SMESG000033607', 'SMESG000022746', 'SMESG000022746', 'SMESG000006969', 'SMESG000037117', 'SMESG000017894', 'SMESG000032691', 'SMESG000050058', 'SMESG000050058', 'SMESG000050059', 'SMESG000065245', 'SMESG000065247', 'SMESG000065253', 'SMESG000065254', 'SMESG000065254', 'SMESG000065269']
positive

def getModelResultPig():
    # 将监督训练模型的结果输出成一张折线图
    # 打开JSON文件
    # model_list=['model3_aug2','model0_aug','model3','model0'] # 模型的存储名
    # labels={'model0':'base_geneformer','model3':'base_geneformer+unlabelled_p_cell',
    #         'model3_aug2':'base_geneformer+unlabelled_p_cell+data_augment','model0_aug':'base_geneformer+data_augment'} # 每个模型经过的操作，用来展示消融实验的结果
    # colors=['b','c','g','k','m','r','y','#667332']
    model_list=['model3','model3_2','model0','model0_2']
    labels = {'model0':'base_geneformer','model0_2':'base_geneformer without WT','model3':'base_geneformer+unlabelled_p_cell','model3_2':'base_geneformer+unlabelled_p_cell without WT'}
    colors = ['b', 'c', 'g', 'k', 'm', 'r', 'y', '#667332']
    linetype=['-','--','-.',':']
    model_history_dict={}
    for model_name in model_list:
        with open('./model_results/'+'trainer_state_'+model_name+'.json') as file:
            # 加载JSON数据
            data = json.load(file)
            train_history = data['log_history']
            model_history_dict[model_name]={}
            for history in train_history:
                if("eval_accuracy" in history):
                    model_history_dict[model_name][history["epoch"]]={'eval_accuracy':history["eval_accuracy"],"eval_macro_f1":history['eval_macro_f1']}
    # 绘制折线图，不同颜色代表不同模型，实现代表accuracy,虚线代表F1
    for model_name in model_list:
        eval_accuracy=[]
        eval_macro_f1=[]
        for history in model_history_dict[model_name]:
            eval_accuracy.append(model_history_dict[model_name][history]['eval_accuracy'])
            eval_macro_f1.append(model_history_dict[model_name][history]['eval_macro_f1'])
        plt.plot(eval_accuracy, color=colors[model_list.index(model_name)], linestyle=linetype[0],label=labels[model_name])
        #plt.plot(eval_macro_f1, color=colors[model_list.index(model_name)], linestyle=linetype[0],label=labels[model_name])
    plt.xlabel("Epochs")
    # plt.title("F1&accuracy")
    plt.title("Accuracy")
    # plt.title("F1")
    plt.grid(alpha=0.3)  # 绘制网格，透明度为0.4
    # 设置图例
    plt.legend()
    plt.show()
    # plt.savefig('model_results/model_accuracy' + '.png')
    plt.savefig('model_results/model_F1'+'.png')
    # plt.savefig('model_results/model_F1&accuracy' + '.png', transparent=True, bbox_inches='tight', pad_inches=0)

def rebuildjson():
    # 将因电脑更新断开的模型训练历史合并
    pre_41='trainer_state.json'
    with open('./model_results/'+pre_41,'r') as file:
        # 加载JSON数据
        data = json.load(file)
        train_history = data['log_history']
    print(train_history)
    after_39='trainer_state (2).json'
    with open('./model_results/'+ after_39,'r') as file:
        # 加载JSON数据
        data = json.load(file)
    for item in  data['log_history']:
        item['epoch']+=30
        train_history.append(item)
    print(train_history)
    with open('./model_results/'+ 'trainer_state_model0_aug.json','w')as file:
        data={'log_history':train_history, "best_metric": 0.5067329406738281,
  "best_model_checkpoint": "./results/model0_aug/240410_geneformer_CellClassifier_L2048_B16_LR1e-05_LSlinear_WU500_E50_Oadamw_F4/timepoint/checkpoint-6679",
  "epoch": 50.0,
  "eval_steps": 500,
  "global_step": 333950,}
        json_data = json.dumps(data)
        file.write(json_data)

    pass
# rebuildjson()
# getModelResultPig()
def makeBing():
    # label_len = {'WT': 30912, '3d': 14211, '1.5d': 13433, '5d': 11582, '10d': 9707, '0h': 8482, '12h': 8093}
    label_len={'GSE179290':0.7438599617665166,'GSE231548':0.10176424845283998,'GSE34969':0.015082785212066229,'GSE56178':0.05171240644136992,'GSE56181':0.03878430483102745,'GSE35565':0.0035479376599812074,'GSE36869':0.01292810161034248,'GSE36945':0.032320254025856206}
    x=[]
    for item in label_len.keys():
        x.append(label_len[item])
    plt.pie(x, labels=label_len.keys())
    plt.show()
# makeBing()
def makeBar():
    new_grow_gene_scores = {'SMESG000081615': 21, 'SMESG000081365': 21, 'SMESG000079240': 21, 'SMESG000078437': 21,
                            'SMESG000077455': 21, 'SMESG000077295': 21, 'SMESG000076395': 21, 'SMESG000076098': 21,
                            'SMESG000075874': 21, 'SMESG000075453': 21, 'SMESG000075370': 21, 'SMESG000075225': 21,
                            'SMESG000074849': 21, 'SMESG000074160': 21, 'SMESG000074052': 21, 'SMESG000072012': 21,
                            'SMESG000071310': 21, 'SMESG000071247': 21, 'SMESG000071011': 21, 'SMESG000070953': 21,
                            'SMESG000070822': 21, 'SMESG000070535': 21, 'SMESG000069576': 21, 'SMESG000069252': 21,
                            'SMESG000068185': 21, 'SMESG000068172': 21, 'SMESG000067685': 21, 'SMESG000067479': 21,
                            'SMESG000067417': 21, 'SMESG000067402': 21, 'SMESG000066726': 21, 'SMESG000066347': 21,
                            'SMESG000066314': 21, 'SMESG000066118': 21, 'SMESG000065727': 21, 'SMESG000065171': 21,
                            'SMESG000065043': 21, 'SMESG000064311': 21, 'SMESG000063589': 21, 'SMESG000062901': 21,
                            'SMESG000062657': 21, 'SMESG000061926': 21, 'SMESG000061866': 21, 'SMESG000061450': 21,
                            'SMESG000060703': 21, 'SMESG000060458': 21, 'SMESG000059887': 21, 'SMESG000059684': 21,
                            'SMESG000059578': 21, 'SMESG000059382': 21, 'SMESG000059184': 21, 'SMESG000056575': 21,
                            'SMESG000056398': 21, 'SMESG000055910': 21, 'SMESG000055720': 21, 'SMESG000055398': 21,
                            'SMESG000055031': 21, 'SMESG000053846': 21, 'SMESG000053465': 21, 'SMESG000052707': 21,
                            'SMESG000052485': 21, 'SMESG000051138': 21, 'SMESG000051096': 21, 'SMESG000050382': 21,
                            'SMESG000049881': 21, 'SMESG000048838': 21, 'SMESG000048372': 21, 'SMESG000045847': 21,
                            'SMESG000045143': 21, 'SMESG000044603': 21, 'SMESG000044503': 21, 'SMESG000043575': 21,
                            'SMESG000043534': 21, 'SMESG000043431': 21, 'SMESG000042729': 21, 'SMESG000042567': 21,
                            'SMESG000042257': 21, 'SMESG000041590': 21, 'SMESG000041447': 21, 'SMESG000040171': 21,
                            'SMESG000039900': 21, 'SMESG000037713': 21, 'SMESG000037334': 21, 'SMESG000037189': 21,
                            'SMESG000036851': 21, 'SMESG000036536': 21, 'SMESG000036512': 21, 'SMESG000035936': 21,
                            'SMESG000035932': 21, 'SMESG000035388': 21, 'SMESG000034890': 21, 'SMESG000034761': 21,
                            'SMESG000034073': 21, 'SMESG000034009': 21, 'SMESG000033712': 21, 'SMESG000033675': 21,
                            'SMESG000033653': 21, 'SMESG000033649': 21, 'SMESG000032966': 21, 'SMESG000032688': 21,
                            'SMESG000032684': 21, 'SMESG000032620': 21, 'SMESG000032619': 21, 'SMESG000031845': 21,
                            'SMESG000030960': 21, 'SMESG000030853': 21, 'SMESG000029291': 21, 'SMESG000028957': 21,
                            'SMESG000028888': 21, 'SMESG000028750': 21, 'SMESG000028598': 21, 'SMESG000028457': 21,
                            'SMESG000026944': 21, 'SMESG000026747': 21, 'SMESG000026488': 21, 'SMESG000026022': 21,
                            'SMESG000025423': 21, 'SMESG000025070': 21, 'SMESG000024474': 21, 'SMESG000023641': 21,
                            'SMESG000023534': 21, 'SMESG000023290': 21, 'SMESG000023120': 21, 'SMESG000023004': 21,
                            'SMESG000022967': 21, 'SMESG000022911': 21, 'SMESG000022808': 21, 'SMESG000022424': 21,
                            'SMESG000021734': 21, 'SMESG000021611': 21, 'SMESG000021147': 21, 'SMESG000020850': 21,
                            'SMESG000020654': 21, 'SMESG000019910': 21, 'SMESG000019618': 21, 'SMESG000019325': 21,
                            'SMESG000019132': 21, 'SMESG000018456': 21, 'SMESG000018020': 21, 'SMESG000017885': 21,
                            'SMESG000017304': 21, 'SMESG000016950': 21, 'SMESG000016924': 21, 'SMESG000016539': 21,
                            'SMESG000016538': 21, 'SMESG000016261': 21, 'SMESG000016243': 21, 'SMESG000015256': 21,
                            'SMESG000015209': 21, 'SMESG000014785': 21, 'SMESG000013953': 21, 'SMESG000013725': 21,
                            'SMESG000012150': 21, 'SMESG000011729': 21, 'SMESG000011108': 21, 'SMESG000010938': 21,
                            'SMESG000010012': 21, 'SMESG000010006': 21, 'SMESG000009900': 21, 'SMESG000009339': 21,
                            'SMESG000009315': 21, 'SMESG000007053': 21, 'SMESG000006006': 21, 'SMESG000005685': 21,
                            'SMESG000005058': 21, 'SMESG000004999': 21, 'SMESG000004973': 21, 'SMESG000004207': 21,
                            'SMESG000004031': 21, 'SMESG000002981': 21, 'SMESG000002897': 21, 'SMESG000002889': 21,
                            'SMESG000002573': 21, 'SMESG000001975': 21, 'SMESG000001953': 21, 'SMESG000001388': 21,
                            'SMESG000000695': 21, 'SMESG000000489': 21, 'SMESG000000023': 21, 'SMESG000062819': 21,
                            'SMESG000056208': 21, 'SMESG000052952': 21, 'SMESG000036673': 21, 'SMESG000035473': 21,
                            'SMESG000027528': 21, 'SMESG000076770': 21, 'SMESG000072336': 21, 'SMESG000058813': 21,
                            'SMESG000037107': 21, 'SMESG000029310': 21, 'SMESG000027427': 21, 'SMESG000074512': 21,
                            'SMESG000061013': 21, 'SMESG000048667': 21, 'SMESG000024319': 21, 'SMESG000015985': 21,
                            'SMESG000014086': 21, 'SMESG000067108': 21, 'SMESG000017552': 21, 'SMESG000061008': 21,
                            'SMESG000046667': 21, 'SMESG000032101': 21, 'SMESG000020672': 21, 'SMESG000019881': 21,
                            'SMESG000051375': 21, 'SMESG000067330': 21, 'SMESG000041864': 21, 'SMESG000031893': 21,
                            'SMESG000071928': 21, 'SMESG000023058': 21, 'SMESG000026952': 21, 'SMESG000074065': 21,
                            'SMESG000022552': 21, 'SMESG000060594': 21, 'SMESG000021346': 21, 'SMESG000045057': 21,
                            'SMESG000022612': 21, 'SMESG000075065': 20, 'SMESG000064674': 20, 'SMESG000031711': 20,
                            'SMESG000026134': 20, 'SMESG000056668': 19, 'SMESG000050981': 19, 'SMESG000048318': 19,
                            'SMESG000046155': 19, 'SMESG000023095': 19, 'SMESG000021287': 19, 'SMESG000016770': 19,
                            'SMESG000000254': 19, 'SMESG000074171': 18, 'SMESG000068009': 18, 'SMESG000044281': 18,
                            'SMESG000041494': 18, 'SMESG000034885': 18, 'SMESG000026676': 18, 'SMESG000023662': 18,
                            'SMESG000022670': 18, 'SMESG000016449': 18, 'SMESG000003163': 18, 'SMESG000040834': 17,
                            'SMESG000075064': 16, 'SMESG000067822': 16, 'SMESG000067583': 16, 'SMESG000057252': 16,
                            'SMESG000045452': 16, 'SMESG000022880': 16, 'SMESG000021885': 16, 'SMESG000017018': 16,
                            'SMESG000009987': 16, 'SMESG000051382': 15, 'SMESG000044458': 15, 'SMESG000024375': 15,
                            'SMESG000016115': 15, 'SMESG000076629': 14, 'SMESG000047591': 14, 'SMESG000033660': 14,
                            'SMESG000077294': 14, 'SMESG000070013': 13, 'SMESG000056367': 13, 'SMESG000052528': 13,
                            'SMESG000040239': 13, 'SMESG000023216': 13, 'SMESG000022823': 13, 'SMESG000021450': 13,
                            'SMESG000019707': 13, 'SMESG000013730': 13, 'SMESG000010175': 13, 'SMESG000008760': 13,
                            'SMESG000055436': 13, 'SMESG000076743': 12, 'SMESG000058651': 12, 'SMESG000077915': 11,
                            'SMESG000076918': 11, 'SMESG000066281': 11, 'SMESG000063825': 11, 'SMESG000056411': 11,
                            'SMESG000055380': 11, 'SMESG000028756': 11, 'SMESG000020957': 11, 'SMESG000017888': 11,
                            'SMESG000012977': 11, 'SMESG000003363': 11, 'SMESG000060422': 11, 'SMESG000004900': 11,
                            'SMESG000015140': 11, 'SMESG000081020': 10, 'SMESG000079975': 10, 'SMESG000076347': 10,
                            'SMESG000069704': 10, 'SMESG000069693': 10, 'SMESG000065299': 10, 'SMESG000063598': 10,
                            'SMESG000061254': 10, 'SMESG000057299': 10, 'SMESG000047665': 10, 'SMESG000042496': 10,
                            'SMESG000039522': 10, 'SMESG000039095': 10, 'SMESG000031097': 10, 'SMESG000030619': 10,
                            'SMESG000030472': 10, 'SMESG000026073': 10, 'SMESG000016959': 10, 'SMESG000016754': 10,
                            'SMESG000009537': 10, 'SMESG000008342': 10, 'SMESG000008119': 10, 'SMESG000004792': 10,
                            'SMESG000003796': 10, 'SMESG000067624': 9, 'SMESG000060465': 9, 'SMESG000059575': 9,
                            'SMESG000051649': 9, 'SMESG000038907': 9, 'SMESG000036887': 9, 'SMESG000009709': 9,
                            'SMESG000023012': 9, 'SMESG000012611': 9, 'SMESG000080177': 8, 'SMESG000026512': 8,
                            'SMESG000010972': 8, 'SMESG000080395': 8, 'SMESG000075138': 7, 'SMESG000069590': 7,
                            'SMESG000068340': 7, 'SMESG000066483': 7, 'SMESG000065719': 7, 'SMESG000063375': 7,
                            'SMESG000055616': 7, 'SMESG000050717': 7, 'SMESG000050353': 7, 'SMESG000049530': 7,
                            'SMESG000046252': 7, 'SMESG000044508': 7, 'SMESG000041850': 7, 'SMESG000040065': 7,
                            'SMESG000036645': 7, 'SMESG000035153': 7, 'SMESG000035028': 7, 'SMESG000033907': 7,
                            'SMESG000031515': 7, 'SMESG000029689': 7, 'SMESG000023161': 7, 'SMESG000018504': 7,
                            'SMESG000000546': 7, 'SMESG000080267': 6, 'SMESG000070171': 6, 'SMESG000061518': 6,
                            'SMESG000060455': 6, 'SMESG000056086': 6, 'SMESG000054424': 6, 'SMESG000053106': 6,
                            'SMESG000051298': 6, 'SMESG000035291': 6, 'SMESG000032497': 6, 'SMESG000032430': 6,
                            'SMESG000027581': 6, 'SMESG000022913': 6, 'SMESG000020799': 6, 'SMESG000013814': 6,
                            'SMESG000003718': 6, 'SMESG000001588': 6, 'SMESG000041346': 6, 'SMESG000075125': 5,
                            'SMESG000058657': 5, 'SMESG000028073': 5, 'SMESG000011721': 5, 'SMESG000049485': 5,
                            'SMESG000000713': 5, 'SMESG000079369': 4, 'SMESG000081136': 4, 'SMESG000046586': 4,
                            'SMESG000080319': 3, 'SMESG000079516': 3, 'SMESG000077758': 3, 'SMESG000070313': 3,
                            'SMESG000058907': 3, 'SMESG000055037': 3, 'SMESG000045122': 3, 'SMESG000044438': 3,
                            'SMESG000028266': 3, 'SMESG000026791': 3, 'SMESG000022871': 3, 'SMESG000011995': 3,
                            'SMESG000003693': 3, 'SMESG000060689': 3, 'SMESG000058865': 3, 'SMESG000018051': 3,
                            'SMESG000081975': 2, 'SMESG000057969': 2, 'SMESG000051442': 2, 'SMESG000049952': 2,
                            'SMESG000022890': 2, 'SMESG000043618': 2, 'SMESG000049048': 2, 'SMESG000045289': 1,
                            'SMESG000041125': 1, 'SMESG000028841': 1, 'SMESG000027551': 1}
    x_labels=[]
    y_data=[]
    for gene in new_grow_gene_scores:
        x_labels.append(gene)
        y_data.append(new_grow_gene_scores[gene])
    for id in range(16):
        print(id,x_labels[id],y_data[id])
    # 绘制柱状图
    plt.bar(range(16), y_data[:16])
    # 设置x轴标签
    plt.xticks(range(16))
    # 显示图形
    plt.show()
# makeBar()
def makeHeat():
    # 两种优化
    #new_grow_gene_scores = {'SMESG000013725': 19, 'SMESG000042796': 11, 'SMESG000080267': 10, 'SMESG000066726': 10, 'SMESG000055910': 10, 'SMESG000009339': 10, 'SMESG000027308': 10, 'SMESG000057173': 9, 'SMESG000030619': 9, 'SMESG000023235': 9, 'SMESG000020478': 9, 'SMESG000022726': 9, 'SMESG000043431': 8, 'SMESG000078045': 7, 'SMESG000071310': 7, 'SMESG000066281': 7, 'SMESG000063598': 7, 'SMESG000060035': 7, 'SMESG000059578': 7, 'SMESG000058578': 7, 'SMESG000055720': 7, 'SMESG000054668': 7, 'SMESG000052838': 7, 'SMESG000051400': 7, 'SMESG000050382': 7, 'SMESG000049016': 7, 'SMESG000043329': 7, 'SMESG000039845': 7, 'SMESG000037557': 7, 'SMESG000034009': 7, 'SMESG000030960': 7, 'SMESG000030927': 7, 'SMESG000029688': 7, 'SMESG000025431': 7, 'SMESG000023534': 7, 'SMESG000022751': 7, 'SMESG000017034': 7, 'SMESG000016924': 7, 'SMESG000009280': 7, 'SMESG000008013': 7, 'SMESG000004062': 7, 'SMESG000001953': 7, 'SMESG000020344': 7, 'SMESG000016825': 7, 'SMESG000038012': 7, 'SMESG000074065': 7, 'SMESG000002455': 7, 'SMESG000044990': 7, 'SMESG000076918': 6, 'SMESG000076727': 6, 'SMESG000076629': 6, 'SMESG000075874': 6, 'SMESG000069008': 6, 'SMESG000066593': 6, 'SMESG000066314': 6, 'SMESG000061518': 6, 'SMESG000058440': 6, 'SMESG000045847': 6, 'SMESG000037713': 6, 'SMESG000027962': 6, 'SMESG000027291': 6, 'SMESG000026488': 6, 'SMESG000023297': 6, 'SMESG000023274': 6, 'SMESG000022880': 6, 'SMESG000022823': 6, 'SMESG000021450': 6, 'SMESG000016538': 6, 'SMESG000016119': 6, 'SMESG000007855': 6, 'SMESG000005149': 6, 'SMESG000004973': 6, 'SMESG000004322': 6, 'SMESG000003163': 6, 'SMESG000002981': 6, 'SMESG000002897': 6, 'SMESG000076398': 6, 'SMESG000047156': 6, 'SMESG000046683': 6, 'SMESG000002573': 6, 'SMESG000058103': 6, 'SMESG000075236': 5, 'SMESG000055233': 5, 'SMESG000050981': 5, 'SMESG000019132': 5, 'SMESG000078818': 4, 'SMESG000077784': 4, 'SMESG000066990': 4, 'SMESG000059675': 4, 'SMESG000047328': 4, 'SMESG000046080': 4, 'SMESG000039917': 4, 'SMESG000036251': 4, 'SMESG000035609': 4, 'SMESG000035357': 4, 'SMESG000029398': 4, 'SMESG000020752': 4, 'SMESG000021290': 4, 'SMESG000014680': 4, 'SMESG000081604': 3, 'SMESG000070822': 3, 'SMESG000070096': 3, 'SMESG000069809': 3, 'SMESG000067417': 3, 'SMESG000062054': 3, 'SMESG000060689': 3, 'SMESG000056367': 3, 'SMESG000047591': 3, 'SMESG000047050': 3, 'SMESG000043455': 3, 'SMESG000040122': 3, 'SMESG000036235': 3, 'SMESG000028266': 3, 'SMESG000025206': 3, 'SMESG000021885': 3, 'SMESG000017016': 3, 'SMESG000016675': 3, 'SMESG000011450': 3, 'SMESG000079504': 3, 'SMESG000044250': 3, 'SMESG000001289': 3, 'SMESG000072336': 3, 'SMESG000081840': 2, 'SMESG000081365': 2, 'SMESG000081020': 2, 'SMESG000078392': 2, 'SMESG000078287': 2, 'SMESG000078174': 2, 'SMESG000077295': 2, 'SMESG000077092': 2, 'SMESG000077081': 2, 'SMESG000076590': 2, 'SMESG000075064': 2, 'SMESG000075029': 2, 'SMESG000072854': 2, 'SMESG000072085': 2, 'SMESG000071322': 2, 'SMESG000071247': 2, 'SMESG000069572': 2, 'SMESG000068721': 2, 'SMESG000068350': 2, 'SMESG000068287': 2, 'SMESG000067798': 2, 'SMESG000067624': 2, 'SMESG000066814': 2, 'SMESG000065870': 2, 'SMESG000065696': 2, 'SMESG000065690': 2, 'SMESG000065343': 2, 'SMESG000065029': 2, 'SMESG000064731': 2, 'SMESG000064217': 2, 'SMESG000064122': 2, 'SMESG000063825': 2, 'SMESG000061841': 2, 'SMESG000061206': 2, 'SMESG000061041': 2, 'SMESG000060394': 2, 'SMESG000059543': 2, 'SMESG000059329': 2, 'SMESG000058675': 2, 'SMESG000058073': 2, 'SMESG000057955': 2, 'SMESG000057876': 2, 'SMESG000057826': 2, 'SMESG000056983': 2, 'SMESG000056474': 2, 'SMESG000056433': 2, 'SMESG000056326': 2, 'SMESG000056135': 2, 'SMESG000056045': 2, 'SMESG000055277': 2, 'SMESG000051680': 2, 'SMESG000051298': 2, 'SMESG000051080': 2, 'SMESG000049794': 2, 'SMESG000048407': 2, 'SMESG000048318': 2, 'SMESG000048301': 2, 'SMESG000047759': 2, 'SMESG000046823': 2, 'SMESG000046589': 2, 'SMESG000046274': 2, 'SMESG000046252': 2, 'SMESG000045774': 2, 'SMESG000045143': 2, 'SMESG000043909': 2, 'SMESG000043394': 2, 'SMESG000042400': 2, 'SMESG000042247': 2, 'SMESG000042010': 2, 'SMESG000041612': 2, 'SMESG000041494': 2, 'SMESG000040831': 2, 'SMESG000040665': 2, 'SMESG000040071': 2, 'SMESG000039992': 2, 'SMESG000039627': 2, 'SMESG000039010': 2, 'SMESG000038985': 2, 'SMESG000038864': 2, 'SMESG000038728': 2, 'SMESG000037131': 2, 'SMESG000036845': 2, 'SMESG000036832': 2, 'SMESG000036610': 2, 'SMESG000036167': 2, 'SMESG000035891': 2, 'SMESG000035449': 2, 'SMESG000035258': 2, 'SMESG000035130': 2, 'SMESG000035028': 2, 'SMESG000034885': 2, 'SMESG000034761': 2, 'SMESG000034433': 2, 'SMESG000033936': 2, 'SMESG000033907': 2, 'SMESG000033891': 2, 'SMESG000033810': 2, 'SMESG000033768': 2, 'SMESG000033706': 2, 'SMESG000033675': 2, 'SMESG000033653': 2, 'SMESG000033248': 2, 'SMESG000032688': 2, 'SMESG000032619': 2, 'SMESG000031564': 2, 'SMESG000031513': 2, 'SMESG000031441': 2, 'SMESG000031436': 2, 'SMESG000030918': 2, 'SMESG000030307': 2, 'SMESG000029652': 2, 'SMESG000029534': 2, 'SMESG000029469': 2, 'SMESG000029226': 2, 'SMESG000028867': 2, 'SMESG000028756': 2, 'SMESG000028379': 2, 'SMESG000028127': 2, 'SMESG000027863': 2, 'SMESG000027383': 2, 'SMESG000027326': 2, 'SMESG000026561': 2, 'SMESG000025194': 2, 'SMESG000025070': 2, 'SMESG000024756': 2, 'SMESG000024177': 2, 'SMESG000023687': 2, 'SMESG000023325': 2, 'SMESG000023286': 2, 'SMESG000023272': 2, 'SMESG000023267': 2, 'SMESG000023039': 2, 'SMESG000023015': 2, 'SMESG000022859': 2, 'SMESG000022856': 2, 'SMESG000022825': 2, 'SMESG000022748': 2, 'SMESG000021574': 2, 'SMESG000021439': 2, 'SMESG000021409': 2, 'SMESG000020794': 2, 'SMESG000020557': 2, 'SMESG000020173': 2, 'SMESG000020156': 2, 'SMESG000019910': 2, 'SMESG000019863': 2, 'SMESG000019852': 2, 'SMESG000018885': 2, 'SMESG000018861': 2, 'SMESG000018067': 2, 'SMESG000017888': 2, 'SMESG000017522': 2, 'SMESG000017279': 2, 'SMESG000017039': 2, 'SMESG000017018': 2, 'SMESG000016383': 2, 'SMESG000016336': 2, 'SMESG000016313': 2, 'SMESG000016264': 2, 'SMESG000016253': 2, 'SMESG000015673': 2, 'SMESG000015050': 2, 'SMESG000012897': 2, 'SMESG000011108': 2, 'SMESG000010175': 2, 'SMESG000010016': 2, 'SMESG000008713': 2, 'SMESG000008562': 2, 'SMESG000008254': 2, 'SMESG000007586': 2, 'SMESG000007405': 2, 'SMESG000007019': 2, 'SMESG000006802': 2, 'SMESG000006631': 2, 'SMESG000005888': 2, 'SMESG000005838': 2, 'SMESG000004792': 2, 'SMESG000004171': 2, 'SMESG000003807': 2, 'SMESG000003013': 2, 'SMESG000001158': 2, 'SMESG000000959': 2, 'SMESG000081847': 2, 'SMESG000077927': 2, 'SMESG000077439': 2, 'SMESG000075748': 2, 'SMESG000074173': 2, 'SMESG000073925': 2, 'SMESG000060752': 2, 'SMESG000057293': 2, 'SMESG000055981': 2, 'SMESG000051773': 2, 'SMESG000051026': 2, 'SMESG000049502': 2, 'SMESG000032754': 2, 'SMESG000030962': 2, 'SMESG000025205': 2, 'SMESG000022332': 2, 'SMESG000017863': 2, 'SMESG000016880': 2, 'SMESG000014489': 2, 'SMESG000004900': 2, 'SMESG000003727': 2, 'SMESG000002944': 2, 'SMESG000076347': 2, 'SMESG000051490': 2, 'SMESG000042667': 2, 'SMESG000041951': 2, 'SMESG000035916': 2, 'SMESG000033713': 2, 'SMESG000031008': 2, 'SMESG000018381': 2, 'SMESG000017304': 2, 'SMESG000011901': 2, 'SMESG000072100': 2, 'SMESG000068215': 2, 'SMESG000018776': 2, 'SMESG000002054': 2, 'SMESG000022421': 2, 'SMESG000005260': 2, 'SMESG000064895': 2, 'SMESG000054823': 2, 'SMESG000024548': 2, 'SMESG000023324': 2, 'SMESG000004364': 2, 'SMESG000035230': 2, 'SMESG000032703': 2, 'SMESG000026173': 2, 'SMESG000020332': 2, 'SMESG000041298': 2, 'SMESG000029458': 2, 'SMESG000025050': 2, 'SMESG000063827': 2, 'SMESG000051375': 2, 'SMESG000048667': 2, 'SMESG000061217': 2, 'SMESG000000602': 2, 'SMESG000022632': 2}
    #
    new_grow_gene_scores={'SMESG000081615': 21, 'SMESG000081365': 21, 'SMESG000079240': 21, 'SMESG000078437': 21, 'SMESG000077455': 21, 'SMESG000077295': 21, 'SMESG000076395': 21, 'SMESG000076098': 21, 'SMESG000075874': 21, 'SMESG000075453': 21, 'SMESG000075370': 21, 'SMESG000075225': 21, 'SMESG000074849': 21, 'SMESG000074160': 21, 'SMESG000074052': 21, 'SMESG000072012': 21, 'SMESG000071310': 21, 'SMESG000071247': 21, 'SMESG000071011': 21, 'SMESG000070953': 21, 'SMESG000070822': 21, 'SMESG000070535': 21, 'SMESG000069576': 21, 'SMESG000069252': 21, 'SMESG000068185': 21, 'SMESG000068172': 21, 'SMESG000067685': 21, 'SMESG000067479': 21, 'SMESG000067417': 21, 'SMESG000067402': 21, 'SMESG000066726': 21, 'SMESG000066347': 21, 'SMESG000066314': 21, 'SMESG000066118': 21, 'SMESG000065727': 21, 'SMESG000065171': 21, 'SMESG000065043': 21, 'SMESG000064311': 21, 'SMESG000063589': 21, 'SMESG000062901': 21, 'SMESG000062657': 21, 'SMESG000061926': 21, 'SMESG000061866': 21, 'SMESG000061450': 21, 'SMESG000060703': 21, 'SMESG000060458': 21, 'SMESG000059887': 21, 'SMESG000059684': 21, 'SMESG000059578': 21, 'SMESG000059382': 21, 'SMESG000059184': 21, 'SMESG000056575': 21, 'SMESG000056398': 21, 'SMESG000055910': 21, 'SMESG000055720': 21, 'SMESG000055398': 21, 'SMESG000055031': 21, 'SMESG000053846': 21, 'SMESG000053465': 21, 'SMESG000052707': 21, 'SMESG000052485': 21, 'SMESG000051138': 21, 'SMESG000051096': 21, 'SMESG000050382': 21, 'SMESG000049881': 21, 'SMESG000048838': 21, 'SMESG000048372': 21, 'SMESG000045847': 21, 'SMESG000045143': 21, 'SMESG000044603': 21, 'SMESG000044503': 21, 'SMESG000043575': 21, 'SMESG000043534': 21, 'SMESG000043431': 21, 'SMESG000042729': 21, 'SMESG000042567': 21, 'SMESG000042257': 21, 'SMESG000041590': 21, 'SMESG000041447': 21, 'SMESG000040171': 21, 'SMESG000039900': 21, 'SMESG000037713': 21, 'SMESG000037334': 21, 'SMESG000037189': 21, 'SMESG000036851': 21, 'SMESG000036536': 21, 'SMESG000036512': 21, 'SMESG000035936': 21, 'SMESG000035932': 21, 'SMESG000035388': 21, 'SMESG000034890': 21, 'SMESG000034761': 21, 'SMESG000034073': 21, 'SMESG000034009': 21, 'SMESG000033712': 21, 'SMESG000033675': 21, 'SMESG000033653': 21, 'SMESG000033649': 21, 'SMESG000032966': 21, 'SMESG000032688': 21, 'SMESG000032684': 21, 'SMESG000032620': 21, 'SMESG000032619': 21, 'SMESG000031845': 21, 'SMESG000030960': 21, 'SMESG000030853': 21, 'SMESG000029291': 21, 'SMESG000028957': 21, 'SMESG000028888': 21, 'SMESG000028750': 21, 'SMESG000028598': 21, 'SMESG000028457': 21, 'SMESG000026944': 21, 'SMESG000026747': 21, 'SMESG000026488': 21, 'SMESG000026022': 21, 'SMESG000025423': 21, 'SMESG000025070': 21, 'SMESG000024474': 21, 'SMESG000023641': 21, 'SMESG000023534': 21, 'SMESG000023290': 21, 'SMESG000023120': 21, 'SMESG000023004': 21, 'SMESG000022967': 21, 'SMESG000022911': 21, 'SMESG000022808': 21, 'SMESG000022424': 21, 'SMESG000021734': 21, 'SMESG000021611': 21, 'SMESG000021147': 21, 'SMESG000020850': 21, 'SMESG000020654': 21, 'SMESG000019910': 21, 'SMESG000019618': 21, 'SMESG000019325': 21, 'SMESG000019132': 21, 'SMESG000018456': 21, 'SMESG000018020': 21, 'SMESG000017885': 21, 'SMESG000017304': 21, 'SMESG000016950': 21, 'SMESG000016924': 21, 'SMESG000016539': 21, 'SMESG000016538': 21, 'SMESG000016261': 21, 'SMESG000016243': 21, 'SMESG000015256': 21, 'SMESG000015209': 21, 'SMESG000014785': 21, 'SMESG000013953': 21, 'SMESG000013725': 21, 'SMESG000012150': 21, 'SMESG000011729': 21, 'SMESG000011108': 21, 'SMESG000010938': 21, 'SMESG000010012': 21, 'SMESG000010006': 21, 'SMESG000009900': 21, 'SMESG000009339': 21, 'SMESG000009315': 21, 'SMESG000007053': 21, 'SMESG000006006': 21, 'SMESG000005685': 21, 'SMESG000005058': 21, 'SMESG000004999': 21, 'SMESG000004973': 21, 'SMESG000004207': 21, 'SMESG000004031': 21, 'SMESG000002981': 21, 'SMESG000002897': 21, 'SMESG000002889': 21, 'SMESG000002573': 21, 'SMESG000001975': 21, 'SMESG000001953': 21, 'SMESG000001388': 21, 'SMESG000000695': 21, 'SMESG000000489': 21, 'SMESG000000023': 21, 'SMESG000062819': 21, 'SMESG000056208': 21, 'SMESG000052952': 21, 'SMESG000036673': 21, 'SMESG000035473': 21, 'SMESG000027528': 21, 'SMESG000076770': 21, 'SMESG000072336': 21, 'SMESG000058813': 21, 'SMESG000037107': 21, 'SMESG000029310': 21, 'SMESG000027427': 21, 'SMESG000074512': 21, 'SMESG000061013': 21, 'SMESG000048667': 21, 'SMESG000024319': 21, 'SMESG000015985': 21, 'SMESG000014086': 21, 'SMESG000067108': 21, 'SMESG000017552': 21, 'SMESG000061008': 21, 'SMESG000046667': 21, 'SMESG000032101': 21, 'SMESG000020672': 21, 'SMESG000019881': 21, 'SMESG000051375': 21, 'SMESG000067330': 21, 'SMESG000041864': 21, 'SMESG000031893': 21, 'SMESG000071928': 21, 'SMESG000023058': 21, 'SMESG000026952': 21, 'SMESG000074065': 21, 'SMESG000022552': 21, 'SMESG000060594': 21, 'SMESG000021346': 21, 'SMESG000045057': 21, 'SMESG000022612': 21, 'SMESG000075065': 20, 'SMESG000064674': 20, 'SMESG000031711': 20, 'SMESG000026134': 20, 'SMESG000056668': 19, 'SMESG000050981': 19, 'SMESG000048318': 19, 'SMESG000046155': 19, 'SMESG000023095': 19, 'SMESG000021287': 19, 'SMESG000016770': 19, 'SMESG000000254': 19, 'SMESG000074171': 18, 'SMESG000068009': 18, 'SMESG000044281': 18, 'SMESG000041494': 18, 'SMESG000034885': 18, 'SMESG000026676': 18, 'SMESG000023662': 18, 'SMESG000022670': 18, 'SMESG000016449': 18, 'SMESG000003163': 18, 'SMESG000040834': 17, 'SMESG000075064': 16, 'SMESG000067822': 16, 'SMESG000067583': 16, 'SMESG000057252': 16, 'SMESG000045452': 16, 'SMESG000022880': 16, 'SMESG000021885': 16, 'SMESG000017018': 16, 'SMESG000009987': 16, 'SMESG000051382': 15, 'SMESG000044458': 15, 'SMESG000024375': 15, 'SMESG000016115': 15, 'SMESG000076629': 14, 'SMESG000047591': 14, 'SMESG000033660': 14, 'SMESG000077294': 14, 'SMESG000070013': 13, 'SMESG000056367': 13, 'SMESG000052528': 13, 'SMESG000040239': 13, 'SMESG000023216': 13, 'SMESG000022823': 13, 'SMESG000021450': 13, 'SMESG000019707': 13, 'SMESG000013730': 13, 'SMESG000010175': 13, 'SMESG000008760': 13, 'SMESG000055436': 13, 'SMESG000076743': 12, 'SMESG000058651': 12, 'SMESG000077915': 11, 'SMESG000076918': 11, 'SMESG000066281': 11, 'SMESG000063825': 11, 'SMESG000056411': 11, 'SMESG000055380': 11, 'SMESG000028756': 11, 'SMESG000020957': 11, 'SMESG000017888': 11, 'SMESG000012977': 11, 'SMESG000003363': 11, 'SMESG000060422': 11, 'SMESG000004900': 11, 'SMESG000015140': 11, 'SMESG000081020': 10, 'SMESG000079975': 10, 'SMESG000076347': 10, 'SMESG000069704': 10, 'SMESG000069693': 10, 'SMESG000065299': 10, 'SMESG000063598': 10, 'SMESG000061254': 10, 'SMESG000057299': 10, 'SMESG000047665': 10, 'SMESG000042496': 10, 'SMESG000039522': 10, 'SMESG000039095': 10, 'SMESG000031097': 10, 'SMESG000030619': 10, 'SMESG000030472': 10, 'SMESG000026073': 10, 'SMESG000016959': 10, 'SMESG000016754': 10, 'SMESG000009537': 10, 'SMESG000008342': 10, 'SMESG000008119': 10, 'SMESG000004792': 10, 'SMESG000003796': 10, 'SMESG000067624': 9, 'SMESG000060465': 9, 'SMESG000059575': 9, 'SMESG000051649': 9, 'SMESG000038907': 9, 'SMESG000036887': 9, 'SMESG000009709': 9, 'SMESG000023012': 9, 'SMESG000012611': 9, 'SMESG000080177': 8, 'SMESG000026512': 8, 'SMESG000010972': 8, 'SMESG000080395': 8, 'SMESG000075138': 7, 'SMESG000069590': 7, 'SMESG000068340': 7, 'SMESG000066483': 7, 'SMESG000065719': 7, 'SMESG000063375': 7, 'SMESG000055616': 7, 'SMESG000050717': 7, 'SMESG000050353': 7, 'SMESG000049530': 7, 'SMESG000046252': 7, 'SMESG000044508': 7, 'SMESG000041850': 7, 'SMESG000040065': 7, 'SMESG000036645': 7, 'SMESG000035153': 7, 'SMESG000035028': 7, 'SMESG000033907': 7, 'SMESG000031515': 7, 'SMESG000029689': 7, 'SMESG000023161': 7, 'SMESG000018504': 7, 'SMESG000000546': 7, 'SMESG000080267': 6, 'SMESG000070171': 6, 'SMESG000061518': 6, 'SMESG000060455': 6, 'SMESG000056086': 6, 'SMESG000054424': 6, 'SMESG000053106': 6, 'SMESG000051298': 6, 'SMESG000035291': 6, 'SMESG000032497': 6, 'SMESG000032430': 6, 'SMESG000027581': 6, 'SMESG000022913': 6, 'SMESG000020799': 6, 'SMESG000013814': 6, 'SMESG000003718': 6, 'SMESG000001588': 6, 'SMESG000041346': 6, 'SMESG000075125': 5, 'SMESG000058657': 5, 'SMESG000028073': 5, 'SMESG000011721': 5, 'SMESG000049485': 5, 'SMESG000000713': 5, 'SMESG000079369': 4, 'SMESG000081136': 4, 'SMESG000046586': 4, 'SMESG000080319': 3, 'SMESG000079516': 3, 'SMESG000077758': 3, 'SMESG000070313': 3, 'SMESG000058907': 3, 'SMESG000055037': 3, 'SMESG000045122': 3, 'SMESG000044438': 3, 'SMESG000028266': 3, 'SMESG000026791': 3, 'SMESG000022871': 3, 'SMESG000011995': 3, 'SMESG000003693': 3, 'SMESG000060689': 3, 'SMESG000058865': 3, 'SMESG000018051': 3, 'SMESG000081975': 2, 'SMESG000057969': 2, 'SMESG000051442': 2, 'SMESG000049952': 2, 'SMESG000022890': 2, 'SMESG000043618': 2, 'SMESG000049048': 2, 'SMESG000045289': 1, 'SMESG000041125': 1, 'SMESG000028841': 1, 'SMESG000027551': 1}
    # with open('new_grow_genes.json','w')as file:
    #     json.dump(new_grow_gene_scores,file)
    #     print('success')

    grow_gene_names=list(new_grow_gene_scores.keys())
    grow_gene_names=grow_gene_names[:21]
    ss_values=[]
    data_matrix=[]
    # dim=0 基因id, dim=1 ss值
    for id in range(21):
        ss_values.append(id)
    for gene in grow_gene_names:
        data_matrix_item = []
        for id in range(21):
            with open('SVM_models/' + str(id) + '_result_gene_classification.pkl', 'rb') as f:
                gene_result = pickle.load(f)
            if(gene_result[gene]=='positive'):
                data_matrix_item.append(1)
            else:
                data_matrix_item.append(0)
        data_matrix.append(data_matrix_item)
    sns.heatmap(data_matrix, cmap='coolwarm', xticklabels=ss_values, yticklabels=grow_gene_names,linewidths=0.5, linecolor='white')
    plt.xticks(fontsize=10)
    plt.yticks(fontsize=5)
    plt.show()
    pass
# makeHeat()
def float_to_percentage(num, decimal_places=2):
    percentage = round(num * 100, decimal_places)
    return str(percentage) + "%"
def makeEXCEL():
    new_grow_gene_scores={'SMESG000081615': 21, 'SMESG000081365': 21, 'SMESG000079240': 21, 'SMESG000078437': 21, 'SMESG000077455': 21, 'SMESG000077295': 21, 'SMESG000076395': 21, 'SMESG000076098': 21, 'SMESG000075874': 21, 'SMESG000075453': 21, 'SMESG000075370': 21, 'SMESG000075225': 21, 'SMESG000074849': 21, 'SMESG000074160': 21, 'SMESG000074052': 21, 'SMESG000072012': 21, 'SMESG000071310': 21, 'SMESG000071247': 21, 'SMESG000071011': 21, 'SMESG000070953': 21, 'SMESG000070822': 21, 'SMESG000070535': 21, 'SMESG000069576': 21, 'SMESG000069252': 21, 'SMESG000068185': 21, 'SMESG000068172': 21, 'SMESG000067685': 21, 'SMESG000067479': 21, 'SMESG000067417': 21, 'SMESG000067402': 21, 'SMESG000066726': 21, 'SMESG000066347': 21, 'SMESG000066314': 21, 'SMESG000066118': 21, 'SMESG000065727': 21, 'SMESG000065171': 21, 'SMESG000065043': 21, 'SMESG000064311': 21, 'SMESG000063589': 21, 'SMESG000062901': 21, 'SMESG000062657': 21, 'SMESG000061926': 21, 'SMESG000061866': 21, 'SMESG000061450': 21, 'SMESG000060703': 21, 'SMESG000060458': 21, 'SMESG000059887': 21, 'SMESG000059684': 21, 'SMESG000059578': 21, 'SMESG000059382': 21, 'SMESG000059184': 21, 'SMESG000056575': 21, 'SMESG000056398': 21, 'SMESG000055910': 21, 'SMESG000055720': 21, 'SMESG000055398': 21, 'SMESG000055031': 21, 'SMESG000053846': 21, 'SMESG000053465': 21, 'SMESG000052707': 21, 'SMESG000052485': 21, 'SMESG000051138': 21, 'SMESG000051096': 21, 'SMESG000050382': 21, 'SMESG000049881': 21, 'SMESG000048838': 21, 'SMESG000048372': 21, 'SMESG000045847': 21, 'SMESG000045143': 21, 'SMESG000044603': 21, 'SMESG000044503': 21, 'SMESG000043575': 21, 'SMESG000043534': 21, 'SMESG000043431': 21, 'SMESG000042729': 21, 'SMESG000042567': 21, 'SMESG000042257': 21, 'SMESG000041590': 21, 'SMESG000041447': 21, 'SMESG000040171': 21, 'SMESG000039900': 21, 'SMESG000037713': 21, 'SMESG000037334': 21, 'SMESG000037189': 21, 'SMESG000036851': 21, 'SMESG000036536': 21, 'SMESG000036512': 21, 'SMESG000035936': 21, 'SMESG000035932': 21, 'SMESG000035388': 21, 'SMESG000034890': 21, 'SMESG000034761': 21, 'SMESG000034073': 21, 'SMESG000034009': 21, 'SMESG000033712': 21, 'SMESG000033675': 21, 'SMESG000033653': 21, 'SMESG000033649': 21, 'SMESG000032966': 21, 'SMESG000032688': 21, 'SMESG000032684': 21, 'SMESG000032620': 21, 'SMESG000032619': 21, 'SMESG000031845': 21, 'SMESG000030960': 21, 'SMESG000030853': 21, 'SMESG000029291': 21, 'SMESG000028957': 21, 'SMESG000028888': 21, 'SMESG000028750': 21, 'SMESG000028598': 21, 'SMESG000028457': 21, 'SMESG000026944': 21, 'SMESG000026747': 21, 'SMESG000026488': 21, 'SMESG000026022': 21, 'SMESG000025423': 21, 'SMESG000025070': 21, 'SMESG000024474': 21, 'SMESG000023641': 21, 'SMESG000023534': 21, 'SMESG000023290': 21, 'SMESG000023120': 21, 'SMESG000023004': 21, 'SMESG000022967': 21, 'SMESG000022911': 21, 'SMESG000022808': 21, 'SMESG000022424': 21, 'SMESG000021734': 21, 'SMESG000021611': 21, 'SMESG000021147': 21, 'SMESG000020850': 21, 'SMESG000020654': 21, 'SMESG000019910': 21, 'SMESG000019618': 21, 'SMESG000019325': 21, 'SMESG000019132': 21, 'SMESG000018456': 21, 'SMESG000018020': 21, 'SMESG000017885': 21, 'SMESG000017304': 21, 'SMESG000016950': 21, 'SMESG000016924': 21, 'SMESG000016539': 21, 'SMESG000016538': 21, 'SMESG000016261': 21, 'SMESG000016243': 21, 'SMESG000015256': 21, 'SMESG000015209': 21, 'SMESG000014785': 21, 'SMESG000013953': 21, 'SMESG000013725': 21, 'SMESG000012150': 21, 'SMESG000011729': 21, 'SMESG000011108': 21, 'SMESG000010938': 21, 'SMESG000010012': 21, 'SMESG000010006': 21, 'SMESG000009900': 21, 'SMESG000009339': 21, 'SMESG000009315': 21, 'SMESG000007053': 21, 'SMESG000006006': 21, 'SMESG000005685': 21, 'SMESG000005058': 21, 'SMESG000004999': 21, 'SMESG000004973': 21, 'SMESG000004207': 21, 'SMESG000004031': 21, 'SMESG000002981': 21, 'SMESG000002897': 21, 'SMESG000002889': 21, 'SMESG000002573': 21, 'SMESG000001975': 21, 'SMESG000001953': 21, 'SMESG000001388': 21, 'SMESG000000695': 21, 'SMESG000000489': 21, 'SMESG000000023': 21, 'SMESG000062819': 21, 'SMESG000056208': 21, 'SMESG000052952': 21, 'SMESG000036673': 21, 'SMESG000035473': 21, 'SMESG000027528': 21, 'SMESG000076770': 21, 'SMESG000072336': 21, 'SMESG000058813': 21, 'SMESG000037107': 21, 'SMESG000029310': 21, 'SMESG000027427': 21, 'SMESG000074512': 21, 'SMESG000061013': 21, 'SMESG000048667': 21, 'SMESG000024319': 21, 'SMESG000015985': 21, 'SMESG000014086': 21, 'SMESG000067108': 21, 'SMESG000017552': 21, 'SMESG000061008': 21, 'SMESG000046667': 21, 'SMESG000032101': 21, 'SMESG000020672': 21, 'SMESG000019881': 21, 'SMESG000051375': 21, 'SMESG000067330': 21, 'SMESG000041864': 21, 'SMESG000031893': 21, 'SMESG000071928': 21, 'SMESG000023058': 21, 'SMESG000026952': 21, 'SMESG000074065': 21, 'SMESG000022552': 21, 'SMESG000060594': 21, 'SMESG000021346': 21, 'SMESG000045057': 21, 'SMESG000022612': 21, 'SMESG000075065': 20, 'SMESG000064674': 20, 'SMESG000031711': 20, 'SMESG000026134': 20, 'SMESG000056668': 19, 'SMESG000050981': 19, 'SMESG000048318': 19, 'SMESG000046155': 19, 'SMESG000023095': 19, 'SMESG000021287': 19, 'SMESG000016770': 19, 'SMESG000000254': 19, 'SMESG000074171': 18, 'SMESG000068009': 18, 'SMESG000044281': 18, 'SMESG000041494': 18, 'SMESG000034885': 18, 'SMESG000026676': 18, 'SMESG000023662': 18, 'SMESG000022670': 18, 'SMESG000016449': 18, 'SMESG000003163': 18, 'SMESG000040834': 17, 'SMESG000075064': 16, 'SMESG000067822': 16, 'SMESG000067583': 16, 'SMESG000057252': 16, 'SMESG000045452': 16, 'SMESG000022880': 16, 'SMESG000021885': 16, 'SMESG000017018': 16, 'SMESG000009987': 16, 'SMESG000051382': 15, 'SMESG000044458': 15, 'SMESG000024375': 15, 'SMESG000016115': 15, 'SMESG000076629': 14, 'SMESG000047591': 14, 'SMESG000033660': 14, 'SMESG000077294': 14, 'SMESG000070013': 13, 'SMESG000056367': 13, 'SMESG000052528': 13, 'SMESG000040239': 13, 'SMESG000023216': 13, 'SMESG000022823': 13, 'SMESG000021450': 13, 'SMESG000019707': 13, 'SMESG000013730': 13, 'SMESG000010175': 13, 'SMESG000008760': 13, 'SMESG000055436': 13, 'SMESG000076743': 12, 'SMESG000058651': 12, 'SMESG000077915': 11, 'SMESG000076918': 11, 'SMESG000066281': 11, 'SMESG000063825': 11, 'SMESG000056411': 11, 'SMESG000055380': 11, 'SMESG000028756': 11, 'SMESG000020957': 11, 'SMESG000017888': 11, 'SMESG000012977': 11, 'SMESG000003363': 11, 'SMESG000060422': 11, 'SMESG000004900': 11, 'SMESG000015140': 11, 'SMESG000081020': 10, 'SMESG000079975': 10, 'SMESG000076347': 10, 'SMESG000069704': 10, 'SMESG000069693': 10, 'SMESG000065299': 10, 'SMESG000063598': 10, 'SMESG000061254': 10, 'SMESG000057299': 10, 'SMESG000047665': 10, 'SMESG000042496': 10, 'SMESG000039522': 10, 'SMESG000039095': 10, 'SMESG000031097': 10, 'SMESG000030619': 10, 'SMESG000030472': 10, 'SMESG000026073': 10, 'SMESG000016959': 10, 'SMESG000016754': 10, 'SMESG000009537': 10, 'SMESG000008342': 10, 'SMESG000008119': 10, 'SMESG000004792': 10, 'SMESG000003796': 10, 'SMESG000067624': 9, 'SMESG000060465': 9, 'SMESG000059575': 9, 'SMESG000051649': 9, 'SMESG000038907': 9, 'SMESG000036887': 9, 'SMESG000009709': 9, 'SMESG000023012': 9, 'SMESG000012611': 9, 'SMESG000080177': 8, 'SMESG000026512': 8, 'SMESG000010972': 8, 'SMESG000080395': 8, 'SMESG000075138': 7, 'SMESG000069590': 7, 'SMESG000068340': 7, 'SMESG000066483': 7, 'SMESG000065719': 7, 'SMESG000063375': 7, 'SMESG000055616': 7, 'SMESG000050717': 7, 'SMESG000050353': 7, 'SMESG000049530': 7, 'SMESG000046252': 7, 'SMESG000044508': 7, 'SMESG000041850': 7, 'SMESG000040065': 7, 'SMESG000036645': 7, 'SMESG000035153': 7, 'SMESG000035028': 7, 'SMESG000033907': 7, 'SMESG000031515': 7, 'SMESG000029689': 7, 'SMESG000023161': 7, 'SMESG000018504': 7, 'SMESG000000546': 7, 'SMESG000080267': 6, 'SMESG000070171': 6, 'SMESG000061518': 6, 'SMESG000060455': 6, 'SMESG000056086': 6, 'SMESG000054424': 6, 'SMESG000053106': 6, 'SMESG000051298': 6, 'SMESG000035291': 6, 'SMESG000032497': 6, 'SMESG000032430': 6, 'SMESG000027581': 6, 'SMESG000022913': 6, 'SMESG000020799': 6, 'SMESG000013814': 6, 'SMESG000003718': 6, 'SMESG000001588': 6, 'SMESG000041346': 6, 'SMESG000075125': 5, 'SMESG000058657': 5, 'SMESG000028073': 5, 'SMESG000011721': 5, 'SMESG000049485': 5, 'SMESG000000713': 5, 'SMESG000079369': 4, 'SMESG000081136': 4, 'SMESG000046586': 4, 'SMESG000080319': 3, 'SMESG000079516': 3, 'SMESG000077758': 3, 'SMESG000070313': 3, 'SMESG000058907': 3, 'SMESG000055037': 3, 'SMESG000045122': 3, 'SMESG000044438': 3, 'SMESG000028266': 3, 'SMESG000026791': 3, 'SMESG000022871': 3, 'SMESG000011995': 3, 'SMESG000003693': 3, 'SMESG000060689': 3, 'SMESG000058865': 3, 'SMESG000018051': 3, 'SMESG000081975': 2, 'SMESG000057969': 2, 'SMESG000051442': 2, 'SMESG000049952': 2, 'SMESG000022890': 2, 'SMESG000043618': 2, 'SMESG000049048': 2, 'SMESG000045289': 1, 'SMESG000041125': 1, 'SMESG000028841': 1, 'SMESG000027551': 1}
    # 创建一个新的Excel文件
    workbook = openpyxl.Workbook()
    # 选择默认的工作表
    sheet = workbook.active
    sheet['A1'] = 'gene_id'
    sheet['B1'] = 'possibility'
    for gene in new_grow_gene_scores:
        sheet.append([gene, float_to_percentage(float(new_grow_gene_scores[gene])/21,4)])
    workbook.save('new_gene_scores.xlsx')
# makeEXCEL()
def get_data():
    # with open('./cluster_model/gene_ebedding.pkl', 'rb') as f:
    with open('/home/wwd/codebox/Geneformer/new/planaria2/cluster_model/gene_ebeddings_aug2.pkl', 'rb') as f:
        gene_ebedding = pickle.load(f)
    with open('./cluster_model/gene_marker_dict.pkl', 'rb') as f:
        gene_marker = pickle.load(f)
    positive_data=[] # 确定为正样本
    negative_data=[] # 确定为负样本
    unknown_data=[]  # 不确定
    for gene in negative:
        if(gene in gene_ebedding):
            negative_data.append({'gene_id':gene,'label':'negative','tensor':[float(item) for item in gene_ebedding[gene]]})
    for gene in positive:
        if (gene in gene_ebedding):
            positive_data.append({'gene_id': gene, 'label': 'positive', 'tensor': [float(item) for item in gene_ebedding[gene]]})
    for gene in gene_ebedding:
        if(gene not in positive and gene not in negative):
            unknown_data.append({'gene_id': gene, 'label': 'unknown', 'tensor': [float(item) for item in gene_ebedding[gene]]})
    # print(len(positive_data)) 34
    # print(len(negative_data)) 13
    # print(len(unknown_data)) 15117
    return positive_data, negative_data, unknown_data
def getMinSS_SMESG(ss,data_dict):
    negative_items=[]
    for data in data_dict:
        if(data_dict[data]['ss']<=ss):
            data=data.split('-')
            data=data[0]
            negative_items.append(data)
    return negative_items
def umap_png():
    new_grow_gene_scores = {'SMESG000081615': 21, 'SMESG000081365': 21, 'SMESG000079240': 21, 'SMESG000078437': 21,
                            'SMESG000077455': 21, 'SMESG000077295': 21, 'SMESG000076395': 21, 'SMESG000076098': 21,
                            'SMESG000075874': 21, 'SMESG000075453': 21, 'SMESG000075370': 21, 'SMESG000075225': 21,
                            'SMESG000074849': 21, 'SMESG000074160': 21, 'SMESG000074052': 21, 'SMESG000072012': 21,
                            'SMESG000071310': 21, 'SMESG000071247': 21, 'SMESG000071011': 21, 'SMESG000070953': 21,
                            'SMESG000070822': 21, 'SMESG000070535': 21, 'SMESG000069576': 21, 'SMESG000069252': 21,
                            'SMESG000068185': 21, 'SMESG000068172': 21, 'SMESG000067685': 21, 'SMESG000067479': 21,
                            'SMESG000067417': 21, 'SMESG000067402': 21, 'SMESG000066726': 21, 'SMESG000066347': 21,
                            'SMESG000066314': 21, 'SMESG000066118': 21, 'SMESG000065727': 21, 'SMESG000065171': 21,
                            'SMESG000065043': 21, 'SMESG000064311': 21, 'SMESG000063589': 21, 'SMESG000062901': 21,
                            'SMESG000062657': 21, 'SMESG000061926': 21, 'SMESG000061866': 21, 'SMESG000061450': 21,
                            'SMESG000060703': 21, 'SMESG000060458': 21, 'SMESG000059887': 21, 'SMESG000059684': 21,
                            'SMESG000059578': 21, 'SMESG000059382': 21, 'SMESG000059184': 21, 'SMESG000056575': 21,
                            'SMESG000056398': 21, 'SMESG000055910': 21, 'SMESG000055720': 21, 'SMESG000055398': 21,
                            'SMESG000055031': 21, 'SMESG000053846': 21, 'SMESG000053465': 21, 'SMESG000052707': 21,
                            'SMESG000052485': 21, 'SMESG000051138': 21, 'SMESG000051096': 21, 'SMESG000050382': 21,
                            'SMESG000049881': 21, 'SMESG000048838': 21, 'SMESG000048372': 21, 'SMESG000045847': 21,
                            'SMESG000045143': 21, 'SMESG000044603': 21, 'SMESG000044503': 21, 'SMESG000043575': 21,
                            'SMESG000043534': 21, 'SMESG000043431': 21, 'SMESG000042729': 21, 'SMESG000042567': 21,
                            'SMESG000042257': 21, 'SMESG000041590': 21, 'SMESG000041447': 21, 'SMESG000040171': 21,
                            'SMESG000039900': 21, 'SMESG000037713': 21, 'SMESG000037334': 21, 'SMESG000037189': 21,
                            'SMESG000036851': 21, 'SMESG000036536': 21, 'SMESG000036512': 21, 'SMESG000035936': 21,
                            'SMESG000035932': 21, 'SMESG000035388': 21, 'SMESG000034890': 21, 'SMESG000034761': 21,
                            'SMESG000034073': 21, 'SMESG000034009': 21, 'SMESG000033712': 21, 'SMESG000033675': 21,
                            'SMESG000033653': 21, 'SMESG000033649': 21, 'SMESG000032966': 21, 'SMESG000032688': 21,
                            'SMESG000032684': 21, 'SMESG000032620': 21, 'SMESG000032619': 21, 'SMESG000031845': 21,
                            'SMESG000030960': 21, 'SMESG000030853': 21, 'SMESG000029291': 21, 'SMESG000028957': 21,
                            'SMESG000028888': 21, 'SMESG000028750': 21, 'SMESG000028598': 21, 'SMESG000028457': 21,
                            'SMESG000026944': 21, 'SMESG000026747': 21, 'SMESG000026488': 21, 'SMESG000026022': 21,
                            'SMESG000025423': 21, 'SMESG000025070': 21, 'SMESG000024474': 21, 'SMESG000023641': 21,
                            'SMESG000023534': 21, 'SMESG000023290': 21, 'SMESG000023120': 21, 'SMESG000023004': 21,
                            'SMESG000022967': 21, 'SMESG000022911': 21, 'SMESG000022808': 21, 'SMESG000022424': 21,
                            'SMESG000021734': 21, 'SMESG000021611': 21, 'SMESG000021147': 21, 'SMESG000020850': 21,
                            'SMESG000020654': 21, 'SMESG000019910': 21, 'SMESG000019618': 21, 'SMESG000019325': 21,
                            'SMESG000019132': 21, 'SMESG000018456': 21, 'SMESG000018020': 21, 'SMESG000017885': 21,
                            'SMESG000017304': 21, 'SMESG000016950': 21, 'SMESG000016924': 21, 'SMESG000016539': 21,
                            'SMESG000016538': 21, 'SMESG000016261': 21, 'SMESG000016243': 21, 'SMESG000015256': 21,
                            'SMESG000015209': 21, 'SMESG000014785': 21, 'SMESG000013953': 21, 'SMESG000013725': 21,
                            'SMESG000012150': 21, 'SMESG000011729': 21, 'SMESG000011108': 21, 'SMESG000010938': 21,
                            'SMESG000010012': 21, 'SMESG000010006': 21, 'SMESG000009900': 21, 'SMESG000009339': 21,
                            'SMESG000009315': 21, 'SMESG000007053': 21, 'SMESG000006006': 21, 'SMESG000005685': 21,
                            'SMESG000005058': 21, 'SMESG000004999': 21, 'SMESG000004973': 21, 'SMESG000004207': 21,
                            'SMESG000004031': 21, 'SMESG000002981': 21, 'SMESG000002897': 21, 'SMESG000002889': 21,
                            'SMESG000002573': 21, 'SMESG000001975': 21, 'SMESG000001953': 21, 'SMESG000001388': 21,
                            'SMESG000000695': 21, 'SMESG000000489': 21, 'SMESG000000023': 21, 'SMESG000062819': 21,
                            'SMESG000056208': 21, 'SMESG000052952': 21, 'SMESG000036673': 21, 'SMESG000035473': 21,
                            'SMESG000027528': 21, 'SMESG000076770': 21, 'SMESG000072336': 21, 'SMESG000058813': 21,
                            'SMESG000037107': 21, 'SMESG000029310': 21, 'SMESG000027427': 21, 'SMESG000074512': 21,
                            'SMESG000061013': 21, 'SMESG000048667': 21, 'SMESG000024319': 21, 'SMESG000015985': 21,
                            'SMESG000014086': 21, 'SMESG000067108': 21, 'SMESG000017552': 21, 'SMESG000061008': 21,
                            'SMESG000046667': 21, 'SMESG000032101': 21, 'SMESG000020672': 21, 'SMESG000019881': 21,
                            'SMESG000051375': 21, 'SMESG000067330': 21, 'SMESG000041864': 21, 'SMESG000031893': 21,
                            'SMESG000071928': 21, 'SMESG000023058': 21, 'SMESG000026952': 21, 'SMESG000074065': 21,
                            'SMESG000022552': 21, 'SMESG000060594': 21, 'SMESG000021346': 21, 'SMESG000045057': 21,
                            'SMESG000022612': 21, 'SMESG000075065': 20, 'SMESG000064674': 20, 'SMESG000031711': 20,
                            'SMESG000026134': 20, 'SMESG000056668': 19, 'SMESG000050981': 19, 'SMESG000048318': 19,
                            'SMESG000046155': 19, 'SMESG000023095': 19, 'SMESG000021287': 19, 'SMESG000016770': 19,
                            'SMESG000000254': 19, 'SMESG000074171': 18, 'SMESG000068009': 18, 'SMESG000044281': 18,
                            'SMESG000041494': 18, 'SMESG000034885': 18, 'SMESG000026676': 18, 'SMESG000023662': 18,
                            'SMESG000022670': 18, 'SMESG000016449': 18, 'SMESG000003163': 18, 'SMESG000040834': 17,
                            'SMESG000075064': 16, 'SMESG000067822': 16, 'SMESG000067583': 16, 'SMESG000057252': 16,
                            'SMESG000045452': 16, 'SMESG000022880': 16, 'SMESG000021885': 16, 'SMESG000017018': 16,
                            'SMESG000009987': 16, 'SMESG000051382': 15, 'SMESG000044458': 15, 'SMESG000024375': 15,
                            'SMESG000016115': 15, 'SMESG000076629': 14, 'SMESG000047591': 14, 'SMESG000033660': 14,
                            'SMESG000077294': 14, 'SMESG000070013': 13, 'SMESG000056367': 13, 'SMESG000052528': 13,
                            'SMESG000040239': 13, 'SMESG000023216': 13, 'SMESG000022823': 13, 'SMESG000021450': 13,
                            'SMESG000019707': 13, 'SMESG000013730': 13, 'SMESG000010175': 13, 'SMESG000008760': 13,
                            'SMESG000055436': 13, 'SMESG000076743': 12, 'SMESG000058651': 12, 'SMESG000077915': 11,
                            'SMESG000076918': 11, 'SMESG000066281': 11, 'SMESG000063825': 11, 'SMESG000056411': 11,
                            'SMESG000055380': 11, 'SMESG000028756': 11, 'SMESG000020957': 11, 'SMESG000017888': 11,
                            'SMESG000012977': 11, 'SMESG000003363': 11, 'SMESG000060422': 11, 'SMESG000004900': 11,
                            'SMESG000015140': 11, 'SMESG000081020': 10, 'SMESG000079975': 10, 'SMESG000076347': 10,
                            'SMESG000069704': 10, 'SMESG000069693': 10, 'SMESG000065299': 10, 'SMESG000063598': 10,
                            'SMESG000061254': 10, 'SMESG000057299': 10, 'SMESG000047665': 10, 'SMESG000042496': 10,
                            'SMESG000039522': 10, 'SMESG000039095': 10, 'SMESG000031097': 10, 'SMESG000030619': 10,
                            'SMESG000030472': 10, 'SMESG000026073': 10, 'SMESG000016959': 10, 'SMESG000016754': 10,
                            'SMESG000009537': 10, 'SMESG000008342': 10, 'SMESG000008119': 10, 'SMESG000004792': 10,
                            'SMESG000003796': 10, 'SMESG000067624': 9, 'SMESG000060465': 9, 'SMESG000059575': 9,
                            'SMESG000051649': 9, 'SMESG000038907': 9, 'SMESG000036887': 9, 'SMESG000009709': 9,
                            'SMESG000023012': 9, 'SMESG000012611': 9, 'SMESG000080177': 8, 'SMESG000026512': 8,
                            'SMESG000010972': 8, 'SMESG000080395': 8, 'SMESG000075138': 7, 'SMESG000069590': 7,
                            'SMESG000068340': 7, 'SMESG000066483': 7, 'SMESG000065719': 7, 'SMESG000063375': 7,
                            'SMESG000055616': 7, 'SMESG000050717': 7, 'SMESG000050353': 7, 'SMESG000049530': 7,
                            'SMESG000046252': 7, 'SMESG000044508': 7, 'SMESG000041850': 7, 'SMESG000040065': 7,
                            'SMESG000036645': 7, 'SMESG000035153': 7, 'SMESG000035028': 7, 'SMESG000033907': 7,
                            'SMESG000031515': 7, 'SMESG000029689': 7, 'SMESG000023161': 7, 'SMESG000018504': 7,
                            'SMESG000000546': 7, 'SMESG000080267': 6, 'SMESG000070171': 6, 'SMESG000061518': 6,
                            'SMESG000060455': 6, 'SMESG000056086': 6, 'SMESG000054424': 6, 'SMESG000053106': 6,
                            'SMESG000051298': 6, 'SMESG000035291': 6, 'SMESG000032497': 6, 'SMESG000032430': 6,
                            'SMESG000027581': 6, 'SMESG000022913': 6, 'SMESG000020799': 6, 'SMESG000013814': 6,
                            'SMESG000003718': 6, 'SMESG000001588': 6, 'SMESG000041346': 6, 'SMESG000075125': 5,
                            'SMESG000058657': 5, 'SMESG000028073': 5, 'SMESG000011721': 5, 'SMESG000049485': 5,
                            'SMESG000000713': 5, 'SMESG000079369': 4, 'SMESG000081136': 4, 'SMESG000046586': 4,
                            'SMESG000080319': 3, 'SMESG000079516': 3, 'SMESG000077758': 3, 'SMESG000070313': 3,
                            'SMESG000058907': 3, 'SMESG000055037': 3, 'SMESG000045122': 3, 'SMESG000044438': 3,
                            'SMESG000028266': 3, 'SMESG000026791': 3, 'SMESG000022871': 3, 'SMESG000011995': 3,
                            'SMESG000003693': 3, 'SMESG000060689': 3, 'SMESG000058865': 3, 'SMESG000018051': 3,
                            'SMESG000081975': 2, 'SMESG000057969': 2, 'SMESG000051442': 2, 'SMESG000049952': 2,
                            'SMESG000022890': 2, 'SMESG000043618': 2, 'SMESG000049048': 2, 'SMESG000045289': 1,
                            'SMESG000041125': 1, 'SMESG000028841': 1, 'SMESG000027551': 1}
    positive_data, negative_data, unknown_data=get_data()
    ebeddings=[]
    labels=[]
    alpha_list=[]
    for data in positive_data:
        ebeddings.append(data['tensor'])
        labels.append(22)
        alpha_list.append(1.0)
    for data in negative_data:
        ebeddings.append(data['tensor'])
        labels.append(0)
        alpha_list.append(1.0)
    with open('dataSets/gene_data_allIndents_ss.pkl', 'rb') as f:
        data_dict = pickle.load(f)
    ss_max=0.0221
    negative_items = getMinSS_SMESG(ss_max, data_dict)
    for data in unknown_data:
        ebeddings.append(data['tensor'])
        if(data['gene_id'] in new_grow_gene_scores):
            labels.append(new_grow_gene_scores[data['gene_id']])
            # alpha_list.append(float(new_grow_gene_scores[data['gene_id']])/21)
            alpha_list.append(float(new_grow_gene_scores[data['gene_id']])/21)
        elif (data['gene_id'] in negative_items):
            labels.append(0)
            alpha_list.append(1)
        else:
            labels.append(0)
            alpha_list.append(0.01)
    reducer = umap.UMAP(n_neighbors=100,metric='cosine')
    embedding = reducer.fit_transform(ebeddings)
    # 绘制降维后的数据
    plt.scatter(embedding[:, 0], embedding[:, 1], c=labels, cmap='Spectral',alpha=alpha_list)
    plt.title('results of the predication')
    plt.colorbar( boundaries=range(23))
    plt.show()

# umap_png()
def makePlot():
    # 读取训练结果数据
    # with open('SVM_models/result2.json','r')as json_file:
    with open('SVM_models/result0_0.json', 'r') as json_file:
        data = json.load(json_file)
    print(data)
    new_positives=[]
    add_negative_nums=[]
    ss_values=[]
    for id in data:
        new_positives.append(data[id]['positive'])
        add_negative_nums.append(data[id]['add_negative_nums'])
        ss_values.append(data[id]['ss'])
    colors = ['b', 'c', 'g', 'k', 'm', 'r', 'y', '#667332']
    linetype = ['-', '--', '-.', ':']
    # plt.plot(ss_values,new_positives, color=colors[0], linestyle=linetype[0], label='positive_gene_num')
    plt.plot(ss_values,  add_negative_nums, color=colors[0], linestyle=linetype[0], label='positive_gene_num')
    plt.xlabel("ss")
    # plt.title("F1&accuracy")
    # plt.title("new positive gene num")
    plt.title("add negative num")
    # plt.title("F1")
    plt.grid(alpha=0.3)  # 绘制网格，透明度为0.4
    # 设置图例
    plt.legend()
    plt.show()
    pass
# makePlot()
def makePng():
    # 根据细胞向量umap，表示细胞种类
    with open( '/home/wwd/codebox/Geneformer/new/planaria2/cluster_model/cell_ebeddings.pkl', 'rb') as f:
        cell_ebeddings = pickle.load(f)
    cell_ebeddings2={}
    label_dict={}
    label_dict['label2']='WT'
    label_dict['label1']='5d'
    label_dict['label0']='12h'
    label_dict['label5']='1.5d'
    label_dict['label4']='3d'
    label_dict['label3']='10d'
    label_dict['label6']='0h'
    for label in cell_ebeddings:
        cell_ebeddings2[label_dict[label]]=cell_ebeddings[label]
    with open('/home/wwd/codebox/Geneformer/new/planaria2/cluster_model/cell_ebedding.pkl', 'wb') as f:
        pickle.dump(cell_ebeddings2,f)
    # print(cell_ebeddings2.keys())
    with open('/home/wwd/codebox/Geneformer/new/planaria2/cluster_model/cell_ebedding.pkl', 'rb') as f:
        cell_ebeddings = pickle.load(f)
    label_dicts={'WT': 0, '5d': 1, '12h': 2, '1.5d': 3, '3d': 4, '10d': 5, '0h': 6}
    ebeddings=[]
    labels=[]
    alpha_list=[]
    for label in cell_ebeddings.keys():
        ebeddings_label=cell_ebeddings[label]
        print(len(ebeddings_label))
        for ebedding in ebeddings_label:
            ebeddings.append(ebedding)
            labels.append(label_dicts[label])
            alpha_list.append(0.3)
    reducer = umap.UMAP(n_neighbors=50, metric='euclidean',spread=3.0)
    embedding = reducer.fit_transform(ebeddings)
    # 绘制降维后的数据
    plt.scatter(embedding[:, 0], embedding[:, 1], c=labels, cmap='Spectral', alpha=alpha_list)
    plt.title('results of the predication')
    plt.colorbar(boundaries=range(7))
    plt.show()
    pass
# makePng()
def makeplt(label,cell_embedding_average2,color):
    plt.grid(False)
    y = cell_embedding_average2[label]
    x = range(len(y))
    print(label)
    plt.subplots_adjust(left=0, right=1, bottom=0, top=1)
    plt.yticks(range(0, 100, 5))
    plt.bar(x, y, color=color)
    plt.show()
def embedding_average():
    with open('/home/wwd/codebox/Geneformer/new/planaria2/cluster_model/cell_ebedding.pkl', 'rb') as f:
        cell_ebeddings = pickle.load(f)
    cell_embedding_average={}
    cell_embedding_average2={}
    for label in cell_ebeddings:
        cell_embedding_average[label]=[]
        cell_embedding_average2[label]=[]
        for ebedding in cell_ebeddings[label]:
            for i in range(len(ebedding)):
                if(len(cell_embedding_average[label])<i+1):
                    cell_embedding_average[label].append([ebedding[i]])
                else:
                    cell_embedding_average[label][i].append(ebedding[i])
        for i in range(len(cell_embedding_average[label])):
            ebedding=np.array(cell_embedding_average[label][i])
            cell_embedding_average2[label].append(float(np.sum(ebedding)/len(ebedding)))
    with open('/home/wwd/codebox/Geneformer/new/planaria2/cluster_model/cell_ebedding_average.pkl', 'wb') as f:
        pickle.dump(cell_embedding_average2,f)
    color_label={'12h':'red','0h':'blue','5d':'green','WT':'darkblue','10d':'yellow','3d':'black','1.5d':'brown'}
    for label in color_label.keys():
        makeplt(label, cell_embedding_average2,color_label[label])
    pass
# embedding_average()